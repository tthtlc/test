                   
                   
┌─────────────────┐
│ 2 Code Findings │
└─────────────────┘
                                                                                
    /src/187579-v1.0.0/src/CWE_601__unserialize__func_preg_replace__header_file_
  name-interpretation_simple_quote.php                                          
       myrule.semgrep-rules_php.lang.security.unserialize-use                   
          Calling `unserialize()` with user input in the pattern can lead to    
  arbitrary code execution.                                                     
          Consider using JSON or structured data approaches (e.g. Google        
  Protocol Buffers).                                                            
                                                                                
            9┆ $tainted = unserialize($string);
            ⋮┆----------------------------------------
       myrule.semgrep-rules_php.lang.security.non-literal-header                
          Using user input when setting headers with `header()` is potentially  
  dangerous. This could                                                         
          allow an attacker to inject a new line and add a new header into the  
  response. This is                                                             
          called HTTP response splitting. To fix, do not allow whitespace inside
  `header()`: '[^\s]+'.                                                         
                                                                                
           13┆ $var = header("Location: '$tainted'.php");

