                   
                   
┌─────────────────┐
│ 2 Code Findings │
└─────────────────┘
                                                                                
    /rootsrc/CWE_89__POST__func_addslashes__join-concatenation_simple_quote.php 
       myrule.lang.security.injection.tainted-sql-string                        
          User data flows into this manually-constructed SQL string. User data  
  can be safely inserted                                                        
          into SQL strings using prepared statements or an object-relational    
  mapper (ORM). Manually-                                                       
          constructed SQL strings is a possible indicator of SQL injection,     
  which could let an                                                            
          attacker steal or manipulate data from the database. Instead, use     
  prepared statements                                                           
          (`$mysqli->prepare("INSERT INTO test(id, label) VALUES (?, ?)");`) or 
  a safe library.                                                               
                                                                                
           10┆ $query = "SELECT lastname, firstname FROM drivers, vehicles WHERE
  drivers.id = vehicles.ownerid AND vehicles.tag='". $tainted . "'";            
            ⋮┆----------------------------------------
       myrule.lang.security.injection.echoed-request                            
          `Echo`ing user input risks cross-site scripting vulnerability. You    
  should use                                                                    
          `htmlentities()` when showing data to users.                          
                                                                                
           13┆ echo "query : ". $query ."<br /><br />" ;

